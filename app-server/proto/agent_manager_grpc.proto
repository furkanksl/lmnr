syntax = "proto3";

package agent_manager_grpc;

enum ModelProvider {
    ANTHROPIC = 0;
    BEDROCK = 1;
}
message Cookie {
    map<string, string> cookie_data = 1;
}

message RunAgentRequest {
    string prompt = 1;
    optional string session_id = 2;
    optional string request_api_key = 3;
    optional string parent_span_context = 4;
    optional string agent_state = 5;
    optional ModelProvider model_provider = 6;
    optional string model = 7;
    optional bool enable_thinking = 8;
    repeated Cookie cookies = 9;
}

message ActionResult {
    optional bool is_done = 1;
    optional string content = 2;
    optional string error = 3;
    optional bool give_control = 4;
}

message StepChunkContent {
    ActionResult action_result = 1;
    string summary = 2;
}

message AgentOutput {
    string agent_state = 1;
    ActionResult result = 2;
    repeated Cookie cookies = 3;
}

message RunAgentResponseStreamChunk {
    oneof chunk_type {
        StepChunkContent step_chunk_content = 1;
        AgentOutput agent_output = 2;
    }
}

service AgentManagerService {
    rpc RunAgent(RunAgentRequest) returns (AgentOutput);
    rpc RunAgentStream(RunAgentRequest) returns (stream RunAgentResponseStreamChunk);
}
